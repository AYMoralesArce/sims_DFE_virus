initialize() {
	initializeMutationRate(1e-6);
	initializeMutationType(1,1,"f",0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 10000);
	initializeRecombinationRate(1e-8);
		}
1 {
	defineConstant("N",1000);
	sim.addSubpop("p1", N);
	
	defineConstant("mmcgens2",c(10000:11000));
	defineConstant("psi",0.3);

	if(psi!=0){
	for(gen in mmcgens2){

		sim.registerEarlyEvent(NULL,s2.source, gen, gen);
		sim.registerModifyChildCallback(NULL,s3.source,NULL,gen,gen);
		sim.registerLateEvent(NULL,s4.source, gen, gen);
		
		}}

	sim.deregisterScriptBlock(s2);
	sim.deregisterScriptBlock(s3);
	sim.deregisterScriptBlock(s4);
}


s2 2 early(){
	sim.addSubpopSplit(2,1,p1);
	p1.setMigrationRates(2, psi);
	countingp1= N-round(N*psi);
	countingother=round(N-countingp1);	
	countingp1=countingp1+(N-(countingp1+(countingother)));
	p1.tag=asInteger(countingp1);
	p2.tag=asInteger(countingother);
	}
	
s3 2 modifyChild(){
	if(subpop.id==1){
		if (sourceSubpop.id==1 & p1.tag==0){
			return(F);}
		else if (sourceSubpop.tag==0){
			return(F);}
		else{
			sourceSubpop.tag=asInteger(sourceSubpop.tag-1);
			return(T);}}
	else{return(T);}
}	
	
	
s4 2 late(){
	p2.setSubpopulationSize(0);
		}
